#include "third_party/FreeRTOS/include/FreeRTOS.h"
#include "third_party/FreeRTOS/include/task.h"

#include "gpio.hpp"
#include "tim.hpp"
#include "drv/hd44780/hd44780.hpp"
#include "drv/di/di.hpp"

using namespace hal;
using namespace drv;

static void b1_cb(di *di, bool state, void *ctx);

static void di_task(void *pvParameters)
{
	di *cd_di = (di *)pvParameters;
	while(1)
	{
		cd_di->poll();
		vTaskDelay(1);
	}
}

int main(void)
{
	// Example for STM32F4DISCOVERY development board
	static gpio b1(0, 0, gpio::mode::DI);
	
	static gpio rs(0, 5, gpio::mode::DO);
	static gpio rw(0, 4, gpio::mode::DO);
	static gpio e(0, 3, gpio::mode::DO);
	static gpio db4(0, 6, gpio::mode::DO);
	static gpio db5(0, 7, gpio::mode::DO);
	static gpio db6(0, 8, gpio::mode::DO);
	static gpio db7(0, 10, gpio::mode::DO);
	
	static tim tim1(TIM_6);
	
	static hd44780 lcd(rs, rw, e, db4, db5, db6, db7, tim1);
	
	static di b1_di(b1, 100, 1);
	b1_di.cb(b1_cb, &lcd);
	
	xTaskCreate(di_task, "di", configMINIMAL_STACK_SIZE * 60, &b1_di,
		tskIDLE_PRIORITY + 2, NULL);
	
	vTaskStartScheduler();
}

static void b1_cb(di *di, bool state, void *ctx)
{
	if(!state)
		return;
	
	hd44780 *lcd = (hd44780 *)ctx;
	
	lcd->init();
	lcd->ddram_addr(0);
	lcd->print("Test");
	
	// Define custom symbol
	uint8_t cgram[64];
	cgram[8]  = 0b00011000;
	cgram[9]  = 0b00001110;
	cgram[10] = 0b00000110;
	cgram[11] = 0b00000111;
	cgram[12] = 0b00000111;
	cgram[13] = 0b00000110;
	cgram[14] = 0b00001100;
	cgram[15] = 0b00011000;
	lcd->write_cgram(cgram);
	
	lcd->ddram_addr(64); // goto the line 2
	lcd->print(char(0)); // Print custom symbol
	
	lcd->ddram_addr(20); // goto the line 3
	lcd->print("Line 3");
	lcd->ddram_addr(84); // goto the line 4
	lcd->print("Line 4");
}
